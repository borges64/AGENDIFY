// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SCHEDULER
  PROFESSIONAL
}

model User {
  id        String        @id @default(cuid())
  email     String        @unique
  name      String
  role      Role
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  appointmentsScheduled Appointment[] @relation("ScheduledBy")
  appointmentsPerformed Appointment[] @relation("PerformedBy")
  patientLogs PatientLog[]
}

model Patient {
  id        String        @id @default(cuid())
  email     String        @unique
  cpf       String        @unique
  name      String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  appointments Appointment[]
  patientLogs PatientLog[]
}

model Clinic {
  id        String        @id @default(cuid())
  name      String
  email     String        @unique
  cnpj      String        @unique
  address   String
  phone     String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  appointments Appointment[]
}

model Appointment {
  id              String   @id @default(cuid())
  date            String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  patient         Patient  @relation(fields: [patientId], references: [id])
  patientId       String
  scheduledBy     User     @relation("ScheduledBy", fields: [scheduledById], references: [id])
  scheduledById   String
  performedBy     User     @relation("PerformedBy", fields: [performedById], references: [id])
  performedById   String
  clinic          Clinic   @relation(fields: [clinicId], references: [id])
  clinicId        String
  MoreInfo        String?
}

model PatientLog {
  id        String   @id @default(cuid())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  log       String
  createdAt DateTime @default(now())
}
