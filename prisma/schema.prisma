// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username      String
  password  String
  cpf String @unique
  phone    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Patient {
  id        Int           @id @default(autoincrement())
  email     String        @unique
  cpf       String        @unique
  name      String
  password  String
  address   String
  phone     String
  phone2    String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  appointments Appointment[]
  patientLogs PatientLog[]
}

model Professional {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  address   String
  phone     String
  phone2    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  clinics   Clinic[]  @relation("ProfessionalClinics")
  appointmentsPerformed Appointment[] @relation("PerformedBy")
  patientLogs PatientLog[]
}

model Scheduler {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  address   String
  phone     String
  phone2    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  clinicId  Int
  clinic    Clinic    @relation(fields: [clinicId], references: [id])
  appointmentsScheduled Appointment[] @relation("ScheduledBy")
}

model Clinic {
  id        Int       @id @default(autoincrement())
  name      String
  password  String
  email     String    @unique
  cnpj      String    @unique
  address   String
  phone     String
  phone2    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  professionals Professional[] @relation("ProfessionalClinics")
  schedulers  Scheduler[]
  appointments Appointment[]
}

model Appointment {
  id              Int      @id @default(autoincrement())
  date            DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  patient         Patient  @relation(fields: [patientId], references: [id])
  patientId       Int
  scheduledBy     Scheduler @relation("ScheduledBy", fields: [scheduledById], references: [id])
  scheduledById   Int
  performedBy     Professional @relation("PerformedBy", fields: [performedById], references: [id])
  performedById   Int
  clinic          Clinic   @relation(fields: [clinicId], references: [id])
  clinicId        Int
  MoreInfo        String?
}

model PatientLog {
  id        Int      @id @default(autoincrement())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId Int
  professional Professional @relation(fields: [professionalId], references: [id])
  professionalId Int
  log       String
  createdAt DateTime @default(now())
}
